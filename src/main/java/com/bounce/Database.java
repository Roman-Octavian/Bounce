package com.bounce;

import java.sql.*;

public class Database {
    private static Connection connection = null;
    private static PreparedStatement preparedStatement = null;

    /**
     * Establish connection to Heroku ClearDB remote database
     * @return the connection
     */
    public static Connection getConnection() {
        try {
            connection = DriverManager.getConnection("jdbc:mysql://eu-cdbr-west-02.cleardb.net:3306/heroku_45b5e60a7be0064?reconnect=true","b6903f704a649d", "817c7daf");
            return connection;
        } catch (SQLException e) {
            e.printStackTrace();
            return null;
        }
    }

    /**
     * Close the connection to the remote database
     */
    public static void closeConnection() {
        if (connection != null) {
            try {
                connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * Add one to global sphere generation count
     * @param c connection to the database
     */
    public static void addToSphereCount(Connection c) {
        try {
            preparedStatement = c.prepareStatement("UPDATE heroku_45b5e60a7be0064.statistics SET sphere_count = sphere_count + 1;");
            preparedStatement.execute();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * Add one to global sphere to sphere collision count
     * @param c connection to the database
     */
    public static void addToSphereCollisionCount(Connection c) {
        try {
            preparedStatement = c.prepareStatement("UPDATE heroku_45b5e60a7be0064.statistics SET sphere_collision_count = sphere_collision_count + 1;");
            preparedStatement.execute();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * Add one to global sphere to wall collision count
     * @param c connection to the database
     */
    public static void addToWallCollisionCount(Connection c) {
        try {
            preparedStatement = c.prepareStatement("UPDATE heroku_45b5e60a7be0064.statistics SET wall_collision_count = wall_collision_count + 1;");
            preparedStatement.execute();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * Retrieve the amount of spheres generated by all users
     * @return integer stored in DB representing generated spheres
     */
    public static int retrieveSphereCount(Connection c) {
        try {
            preparedStatement = c.prepareStatement("SELECT sphere_count FROM statistics");
            ResultSet resultSet = preparedStatement.executeQuery();
            resultSet.next();
            return resultSet.getInt("sphere_count");
        } catch (SQLException e) {
            e.printStackTrace();
            return -1;
        }
    }

    /**
     * Retrieve the amount of sphere to sphere collisions generated by all users
     * @return integer stored in DB representing collision amount
     */
    public static int retrieveSphereCollisionCount(Connection c) {
        try {
            preparedStatement = c.prepareStatement("SELECT sphere_collision_count FROM statistics");
            ResultSet resultSet = preparedStatement.executeQuery();
            resultSet.next();
            return resultSet.getInt("sphere_collision_count");
        } catch (SQLException e) {
            e.printStackTrace();
            return -1;
        }
    }

    /**
     * Retrieve the amount of sphere to wall collisions generated by all users
     * @return integer stored in DB representing collision amount
     */
    public static int retrieveWallCollisionCount(Connection c) {
        try {
            preparedStatement = c.prepareStatement("SELECT wall_collision_count FROM statistics");
            ResultSet resultSet = preparedStatement.executeQuery();
            resultSet.next();
            return resultSet.getInt("wall_collision_count");
        } catch (SQLException e) {
            e.printStackTrace();
            return -1;
        }
    }
}